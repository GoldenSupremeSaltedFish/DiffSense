name: DiffSense CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build DiffSense
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      
      # 设置Java环境
      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
          
      # 构建Java分析器
      - name: Build Java Analyzer
        run: mvn clean package -DskipTests
      
      # 设置Node环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            ui/diffsense-frontend/package-lock.json
            plugin/package-lock.json

      # 安装前端依赖并构建
      - name: Build Frontend
        working-directory: ui/diffsense-frontend
        run: |
          npm ci
          npm run build
        
      # 安装插件依赖并构建
      - name: Build VSCode Extension
        working-directory: plugin
        run: |
          npm ci
          npm run build
          
      # 准备插件目录结构
      - name: Prepare Plugin Structure
        run: |
          # 创建必要的目录
          mkdir -p plugin/analyzers
          mkdir -p plugin/ui/diffsense-frontend
          
          # 复制Java分析器
          cp target/gitimpact-*-jar-with-dependencies.jar plugin/analyzers/
          cp target/gitimpact-*.jar plugin/analyzers/
          
          # 复制前端构建产物（现在直接从plugin/dist复制）
          if [ -d "plugin/dist" ]; then
            cp -r plugin/dist/* plugin/ui/diffsense-frontend/
          else
            echo "Error: plugin/dist directory not found"
            ls -la plugin/
            exit 1
          fi
          
          # 复制Node和Golang分析器
          cp -r ui/node-analyzer plugin/analyzers/
          cp -r ui/golang-analyzer plugin/analyzers/
          
          # 显示目录结构以便调试
          echo "=== Plugin directory structure ==="
          ls -R plugin/
          
      # 打包VSCode插件
      - name: Package VSCode Extension
        working-directory: plugin
        run: npm run package
          
      # 获取版本号
      - name: Get Version
        id: get_version
        run: |
          VERSION=$(node -p "require('./plugin/package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
      # 创建GitHub Release
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
          
      # 上传VSIX到Release
      - name: Upload VSIX to Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./plugin/diffsense-${{ env.VERSION }}.vsix
          asset_name: diffsense-${{ env.VERSION }}.vsix
          asset_content_type: application/octet-stream
          
      # 上传构建产物（用于调试和验证）
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: DiffSense-${{ env.VERSION }}-Full
          path: |
            plugin/analyzers/
            plugin/ui/
            plugin/*.vsix
          retention-days: 14
